import matplotlib.pyplot as plt
from matplotlib.image import imread
from os import listdir
from numpy import asarray
from numpy import save
from keras.preprocessing.image import load_img, img_to_array
from keras.models import Sequential
from keras.layers import Dense, Activation, BatchNormalization, Dropout, Conv2D, MaxPooling2D, Flatten
import matplotlib.pyplot as plt
from tensorflow.keras.utils import load_img, img_to_array
import numpy as np
from google.colab import drive
drive.mount('/content/drive')
folder= '/content/drive/MyDrive/hocAI/tienvietnam/'
for i in range(9):
  plt.subplot(330+i+1)
  filename = folder+'500k_truoc ('+str(i+1)+').jpg'
  image = imread(filename)
  plt.imshow(image)
plt.show()
folder = '/content/drive/MyDrive/hocAI/tienvietnam/'

photos, labels = list(), list()
for file in listdir(folder):
  if file.startswith('2k_truoc'):
    output = 0
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('2k_sau'):
    output = 1
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('5k_truoc'):
    output = 2
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('5k_sau'):
    output = 3
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('10k_truoc'):
    output = 4
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('10k_sau'):
    output = 5
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('20k_truoc'):
    output = 6
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('20k_sau'):
    output = 7
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('50k_truoc'):
    output = 8
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('50k_sau'):
    output = 9
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('100k_truoc'):
    output = 10
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)
    
for file in listdir(folder):
  if file.startswith('100k_sau'):
    output = 11
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('200k_truoc'):
    output = 12
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('200k_sau'):
    output = 13
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('500k_truoc'):
    output = 14
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)

for file in listdir(folder):
  if file.startswith('500k_sau'):
    output = 15
    photo = load_img(folder+file,target_size=(150,350))
    photo = img_to_array(photo)
    photos.append(photo)
    labels.append(output)
 
photos = asarray(photos)
labels = asarray(labels)
print(photos.shape,labels.shape)

save('10foods_photos.npy', photos)
save('10foods_labels.npy', labels)
model = Sequential()
model.add(Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_uniform', padding='same', input_shape=(150,350, 3)))
model.add(MaxPooling2D((2, 2)))

model.add(Conv2D(64, (3, 3), activation='relu', kernel_initializer='he_uniform', padding='same'))
model.add(MaxPooling2D((2, 2)))

model.add(Conv2D(128, (3, 3), activation='relu', kernel_initializer='he_uniform', padding='same'))
model.add(MaxPooling2D((2, 2)))
model.add(Flatten())

model.add(Dense(128, activation='relu'))
model.add(Dense(128, activation='relu'))
model.add(Dense(128, activation='relu'))
model.add(Dense(128, activation='relu'))
model.add(Dense(128, activation='relu'))
model.add(Dense(16, activation='softmax'))


model.compile(optimizer='Adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
history = model.fit(photos, labels, batch_size=64,epochs=20, verbose=1)
model.save('tienvietnam.h5')
classes = ["2k","2k","5k","5k","10k","10k","20k","20k","50k","50k","100k","100k","200k","200k","500k","500k"]
img = load_img('/content/drive/MyDrive/hocAI/New folder/500k.jpg', target_size=(150,350))
plt.imshow(img)
imgRe = img_to_array(img)
imgRe = imgRe.reshape(1,150,350,3)  
imgRe = imgRe.astype('float32')
imgRe /= 255
y_pred = model.predict(imgRe)
print(y_pred)
y_classes = [np.argmax(element) for element in y_pred]
y_classes
classes[y_classes[0]]
